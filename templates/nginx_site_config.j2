upstream {{ django_project_name }}_wsgi_server {
  # fail_timeout=0 means we always retry an upstream even if it failed
  # to return a good HTTP response (in case the Unicorn master nukes a
  # single worker for timing out).

  server unix:{{ django_virtualenv }}run/gunicorn.sock fail_timeout=0;
}

server {
    listen {{ django_nginx_http_port }};

    client_max_body_size 4G;

    {% if django_server_names %}
    server_name  {{ django_server_names|join(' ') }};
    {% endif %}

    access_log {{ django_nginx_access_log_file }};
    error_log {{ django_nginx_error_log_file }};

    {% if django_static_dir %}
    location /static/ {
        alias   {{ django_static_dir }};
    }
    {% endif %}

    {% if django_media_dir: %}
    location /media/ {
        alias   {{ django_media_dir }};
    }
    {% endif %}

    location / {
        # if this file is found, show maintenance message
         if (-f {{ django_path }}maintenance.html) {
            return 503;
        }

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;

        # Try to serve static files from nginx, no point in making an
        # *application* server like Unicorn/Rainbows! serve static files.
        if (!-f $request_filename) {
            proxy_pass http://{{ django_project_name }}_wsgi_server;
            break;
        }
    }

    # Error pages
    error_page 500 502 504 /500.html;
    location = /500.html {
        root {{ django_path }}current/templates/;
    }

    error_page 503 /maintenance.html;
    location = /maintenance.html {
        root {{ django_path }};
    }
}
